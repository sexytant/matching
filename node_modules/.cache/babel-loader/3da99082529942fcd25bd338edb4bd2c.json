{"ast":null,"code":"import _objectSpread from\"/Users/hiroki.tanaka/matching/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/hiroki.tanaka/matching/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import ReactDOM from\"react-dom\";import{Container,Draggable}from\"react-smooth-dnd\";import arrayMoveImmutable from\"array-move\";import List from\"@material-ui/core/List\";import Paper from\"@material-ui/core/Paper\";import ListItem from\"@material-ui/core/ListItem\";import ListItemText from\"@material-ui/core/ListItemText\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SortableList=function SortableList(){// 初期データ。state で並び順も含めて管理。\n// 適当なタイミングでこの state をどうこうすることによって並び順の情報を任意に扱えます\nvar _useState=useState([{id:\"1\",text:\"小清水\",order:0},{id:\"2\",text:\"植田\",order:1},{id:\"3\",text:\"中村一貴\",order:2},{id:\"4\",text:\"櫻木\",order:3},{id:\"5\",text:\"田中\",order:4}]),_useState2=_slicedToArray(_useState,2),items=_useState2[0],setItems=_useState2[1];// Drag And Drop の Drop 時イベント\n// react-smooth-dnd の onDrop で発火\n// このイベントで渡される引数によって元々どのインデックスの要素が消えて、どのインデックスに差し込まれたのかわかります\nvar onDrop=function onDrop(_ref){var removedIndex=_ref.removedIndex,addedIndex=_ref.addedIndex;//@see https://ja.reactjs.org/docs/hooks-reference.html#functional-updates\n// @see https://github.com/sindresorhus/array-move 配列中の要素を動かすスニペットライブラリ\n// イベントで渡された要素の移動を state に伝えます。\n// この際、ライブラリで配列中の要素を移動、各要素のプロパティに現在のインデックスを付与、としています。\nvar updater=function updater(items){return arrayMoveImmutable(items,removedIndex,addedIndex).map(function(item,idx){return _objectSpread(_objectSpread({},item),{},{order:idx});});};setItems(updater);};// @see https://github.com/kutlugsahin/react-smooth-dnd\nreturn/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",gap:\"10px\"},children:[/*#__PURE__*/_jsxs(Paper,{style:{width:\"50%\",padding:\"0 10px\"},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3067\\u4E26\\u3073\\u9806\\u64CD\\u4F5C\"}),/*#__PURE__*/_jsx(List,{children:/*#__PURE__*/_jsx(Container,{onDrop:onDrop,children:items.map(function(_ref2){var id=_ref2.id,text=_ref2.text;return/*#__PURE__*/_jsx(Draggable,{children:/*#__PURE__*/_jsx(ListItem,{style:{border:\"solid 1px\",background:\"white\"},children:/*#__PURE__*/_jsx(ListItemText,{primary:text})})},id);})})})]}),/*#__PURE__*/_jsxs(Paper,{style:{width:\"50%\",padding:\"0 10px\"},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u4E26\\u3073\\u9806\\u30C7\\u30FC\\u30BF\"}),/*#__PURE__*/_jsx(\"pre\",{children:JSON.stringify(Array.from(items).sort(function(a,b){return a.id-b.id;}),null,2)})]})]});};ReactDOM.render(/*#__PURE__*/_jsx(SortableList,{}),document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/hiroki.tanaka/matching/src/index.js"],"names":["React","useState","ReactDOM","Container","Draggable","arrayMoveImmutable","List","Paper","ListItem","ListItemText","SortableList","id","text","order","items","setItems","onDrop","removedIndex","addedIndex","updater","map","item","idx","display","gap","width","padding","border","background","JSON","stringify","Array","from","sort","a","b","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Container, Draggable } from \"react-smooth-dnd\";\nimport arrayMoveImmutable from \"array-move\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n \nconst SortableList = () => {\n  // 初期データ。state で並び順も含めて管理。\n  // 適当なタイミングでこの state をどうこうすることによって並び順の情報を任意に扱えます\n  const [items, setItems] = useState([\n    { id: \"1\", text: \"小清水\", order: 0 },\n    { id: \"2\", text: \"植田\", order: 1 },\n    { id: \"3\", text: \"中村一貴\", order: 2 },\n    { id: \"4\", text: \"櫻木\", order: 3 },\n    { id: \"5\", text: \"田中\", order: 4 }\n  ]);\n \n  // Drag And Drop の Drop 時イベント\n  // react-smooth-dnd の onDrop で発火\n  // このイベントで渡される引数によって元々どのインデックスの要素が消えて、どのインデックスに差し込まれたのかわかります\n  const onDrop = ({ removedIndex, addedIndex }) => {\n    //@see https://ja.reactjs.org/docs/hooks-reference.html#functional-updates\n    // @see https://github.com/sindresorhus/array-move 配列中の要素を動かすスニペットライブラリ\n    // イベントで渡された要素の移動を state に伝えます。\n    // この際、ライブラリで配列中の要素を移動、各要素のプロパティに現在のインデックスを付与、としています。\n    const updater = (items) =>\n      arrayMoveImmutable(items, removedIndex, addedIndex).map((item, idx) => {\n        return { ...item, order: idx };\n      });\n    setItems(updater);\n  };\n \n  // @see https://github.com/kutlugsahin/react-smooth-dnd\n  return (\n    <div style={{ display: \"flex\", gap: \"10px\" }}>\n      <Paper style={{ width: \"50%\", padding: \"0 10px\" }}>\n        <h4>ドラッグ&ドロップで並び順操作</h4>\n        <List>\n          <Container onDrop={onDrop}>\n            {items.map(({ id, text }) => (\n              <Draggable key={id}>\n                <ListItem style={{ border: \"solid 1px\", background: \"white\" }}>\n                  <ListItemText primary={text} />\n                </ListItem>\n              </Draggable>\n            ))}\n          </Container>\n        </List>\n      </Paper>\n      <Paper style={{ width: \"50%\", padding: \"0 10px\" }}>\n        <h4>並び順データ</h4>\n        <pre>\n          {JSON.stringify(\n            Array.from(items).sort((a, b) => a.id - b.id),\n            null,\n            2\n          )}\n        </pre>\n      </Paper>\n    </div>\n  );\n};\n \nReactDOM.render(<SortableList />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}