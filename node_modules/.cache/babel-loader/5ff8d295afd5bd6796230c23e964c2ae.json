{"ast":null,"code":"import _toConsumableArray from \"/Users/hiroki.tanaka/matching/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/hiroki.tanaka/matching/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nexport function arrayMoveMutable(array, fromIndex, toIndex) {\n  var startIndex = fromIndex < 0 ? array.length + fromIndex : fromIndex;\n\n  if (startIndex >= 0 && startIndex < array.length) {\n    var endIndex = toIndex < 0 ? array.length + toIndex : toIndex;\n\n    var _array$splice = array.splice(fromIndex, 1),\n        _array$splice2 = _slicedToArray(_array$splice, 1),\n        item = _array$splice2[0];\n\n    array.splice(endIndex, 0, item);\n  }\n}\nexport function arrayMoveImmutable(array, fromIndex, toIndex) {\n  array = _toConsumableArray(array);\n  arrayMoveMutable(array, fromIndex, toIndex);\n  return array;\n}","map":{"version":3,"sources":["/Users/hiroki.tanaka/matching/node_modules/array-move/index.js"],"names":["arrayMoveMutable","array","fromIndex","toIndex","startIndex","length","endIndex","splice","item","arrayMoveImmutable"],"mappings":";;AAAA,OAAO,SAASA,gBAAT,CAA0BC,KAA1B,EAAiCC,SAAjC,EAA4CC,OAA5C,EAAqD;AAC3D,MAAMC,UAAU,GAAGF,SAAS,GAAG,CAAZ,GAAgBD,KAAK,CAACI,MAAN,GAAeH,SAA/B,GAA2CA,SAA9D;;AAEA,MAAIE,UAAU,IAAI,CAAd,IAAmBA,UAAU,GAAGH,KAAK,CAACI,MAA1C,EAAkD;AACjD,QAAMC,QAAQ,GAAGH,OAAO,GAAG,CAAV,GAAcF,KAAK,CAACI,MAAN,GAAeF,OAA7B,GAAuCA,OAAxD;;AAEA,wBAAeF,KAAK,CAACM,MAAN,CAAaL,SAAb,EAAwB,CAAxB,CAAf;AAAA;AAAA,QAAOM,IAAP;;AACAP,IAAAA,KAAK,CAACM,MAAN,CAAaD,QAAb,EAAuB,CAAvB,EAA0BE,IAA1B;AACA;AACD;AAED,OAAO,SAASC,kBAAT,CAA4BR,KAA5B,EAAmCC,SAAnC,EAA8CC,OAA9C,EAAuD;AAC7DF,EAAAA,KAAK,sBAAOA,KAAP,CAAL;AACAD,EAAAA,gBAAgB,CAACC,KAAD,EAAQC,SAAR,EAAmBC,OAAnB,CAAhB;AACA,SAAOF,KAAP;AACA","sourcesContent":["export function arrayMoveMutable(array, fromIndex, toIndex) {\n\tconst startIndex = fromIndex < 0 ? array.length + fromIndex : fromIndex;\n\n\tif (startIndex >= 0 && startIndex < array.length) {\n\t\tconst endIndex = toIndex < 0 ? array.length + toIndex : toIndex;\n\n\t\tconst [item] = array.splice(fromIndex, 1);\n\t\tarray.splice(endIndex, 0, item);\n\t}\n}\n\nexport function arrayMoveImmutable(array, fromIndex, toIndex) {\n\tarray = [...array];\n\tarrayMoveMutable(array, fromIndex, toIndex);\n\treturn array;\n}\n"]},"metadata":{},"sourceType":"module"}