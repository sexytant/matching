{"ast":null,"code":"var _jsxFileName = \"/Users/hiroki.tanaka/matching/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Container, Draggable } from \"react-smooth-dnd\";\nimport arrayMoveImmutable from \"array-move\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SortableList = () => {\n  _s();\n\n  // 初期データ。state で並び順も含めて管理。\n  // 適当なタイミングでこの state をどうこうすることによって並び順の情報を任意に扱えます\n  const [items, setItems] = useState([{\n    id: \"1\",\n    text: \"初期1行目\",\n    order: 0\n  }, {\n    id: \"2\",\n    text: \"初期2行目\",\n    order: 1\n  }, {\n    id: \"3\",\n    text: \"初期3行目\",\n    order: 2\n  }, {\n    id: \"4\",\n    text: \"初期4行目\",\n    order: 3\n  }, {\n    id: \"5\",\n    text: \"初期5行目\",\n    order: 4\n  }]); // Drag And Drop の Drop 時イベント\n  // react-smooth-dnd の onDrop で発火\n  // このイベントで渡される引数によって元々どのインデックスの要素が消えて、どのインデックスに差し込まれたのかわかります\n\n  const onDrop = _ref => {\n    let {\n      removedIndex,\n      addedIndex\n    } = _ref;\n\n    //@see https://ja.reactjs.org/docs/hooks-reference.html#functional-updates\n    // @see https://github.com/sindresorhus/array-move 配列中の要素を動かすスニペットライブラリ\n    // イベントで渡された要素の移動を state に伝えます。\n    // この際、ライブラリで配列中の要素を移動、各要素のプロパティに現在のインデックスを付与、としています。\n    const updater = items => arrayMoveMutable(items, removedIndex, addedIndex).map((item, idx) => {\n      return { ...item,\n        order: idx\n      };\n    });\n\n    setItems(updater);\n  }; // @see https://github.com/kutlugsahin/react-smooth-dnd\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      gap: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        width: \"50%\",\n        padding: \"0 10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3067\\u4E26\\u3073\\u9806\\u64CD\\u4F5C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          onDrop: onDrop,\n          children: items.map(_ref2 => {\n            let {\n              id,\n              text\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  border: \"solid 1px\",\n                  background: \"white\"\n                },\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        width: \"50%\",\n        padding: \"0 10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u4E26\\u3073\\u9806\\u30C7\\u30FC\\u30BF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(Array.from(items).sort((a, b) => a.id - b.id), null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SortableList, \"vfYwDNfwUpNptGMascdPnw1/mCE=\");\n\n_c = SortableList;\nReactDOM.render( /*#__PURE__*/_jsxDEV(SortableList, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"SortableList\");","map":{"version":3,"sources":["/Users/hiroki.tanaka/matching/src/index.js"],"names":["React","useState","ReactDOM","Container","Draggable","arrayMoveImmutable","List","Paper","ListItem","ListItemText","SortableList","items","setItems","id","text","order","onDrop","removedIndex","addedIndex","updater","arrayMoveMutable","map","item","idx","display","gap","width","padding","border","background","JSON","stringify","Array","from","sort","a","b","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Container, Draggable } from \"react-smooth-dnd\";\nimport arrayMoveImmutable from \"array-move\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n \nconst SortableList = () => {\n  // 初期データ。state で並び順も含めて管理。\n  // 適当なタイミングでこの state をどうこうすることによって並び順の情報を任意に扱えます\n  const [items, setItems] = useState([\n    { id: \"1\", text: \"初期1行目\", order: 0 },\n    { id: \"2\", text: \"初期2行目\", order: 1 },\n    { id: \"3\", text: \"初期3行目\", order: 2 },\n    { id: \"4\", text: \"初期4行目\", order: 3 },\n    { id: \"5\", text: \"初期5行目\", order: 4 }\n  ]);\n \n  // Drag And Drop の Drop 時イベント\n  // react-smooth-dnd の onDrop で発火\n  // このイベントで渡される引数によって元々どのインデックスの要素が消えて、どのインデックスに差し込まれたのかわかります\n  const onDrop = ({ removedIndex, addedIndex }) => {\n    //@see https://ja.reactjs.org/docs/hooks-reference.html#functional-updates\n    // @see https://github.com/sindresorhus/array-move 配列中の要素を動かすスニペットライブラリ\n    // イベントで渡された要素の移動を state に伝えます。\n    // この際、ライブラリで配列中の要素を移動、各要素のプロパティに現在のインデックスを付与、としています。\n    const updater = (items) =>\n      arrayMoveMutable(items, removedIndex, addedIndex).map((item, idx) => {\n        return { ...item, order: idx };\n      });\n    setItems(updater);\n  };\n \n  // @see https://github.com/kutlugsahin/react-smooth-dnd\n  return (\n    <div style={{ display: \"flex\", gap: \"10px\" }}>\n      <Paper style={{ width: \"50%\", padding: \"0 10px\" }}>\n        <h4>ドラッグ&ドロップで並び順操作</h4>\n        <List>\n          <Container onDrop={onDrop}>\n            {items.map(({ id, text }) => (\n              <Draggable key={id}>\n                <ListItem style={{ border: \"solid 1px\", background: \"white\" }}>\n                  <ListItemText primary={text} />\n                </ListItem>\n              </Draggable>\n            ))}\n          </Container>\n        </List>\n      </Paper>\n      <Paper style={{ width: \"50%\", padding: \"0 10px\" }}>\n        <h4>並び順データ</h4>\n        <pre>\n          {JSON.stringify(\n            Array.from(items).sort((a, b) => a.id - b.id),\n            null,\n            2\n          )}\n        </pre>\n      </Paper>\n    </div>\n  );\n};\n \nReactDOM.render(<SortableList />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}